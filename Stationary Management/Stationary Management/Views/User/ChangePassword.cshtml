@using Microsoft.AspNet.Identity
@model SCHM.Web.Models.ChangePsswordViewModel

@{
    ViewBag.Title = "Change Password";
    Layout = null;
}
<!DOCTYPE html>
<html>
<head>

    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <title>Change Password | @ProjectGlobalProperties.ProjectTitle</title>
    <!-- Tell the browser to be responsive to screen width -->
    <meta content="width=device-width, initial-scale=1, maximum-scale=1, user-scalable=no" name="viewport">
    <!-- Bootstrap 3.3.7 -->

    @Styles.Render("~/Content/bootstrap")
    <!-- Font Awesome -->
    @Styles.Render("~/Content/font-awesome")
    <!-- Ionicons -->
    @Styles.Render("~/Content/ionicons")
    <!-- jvectormap -->
    <!-- Theme style -->
    @Styles.Render("~/Content/_all-skins")

    @Styles.Render("~/Content/AdminLTE")
    @Styles.Render("~/Content/css")
    @*<link rel="stylesheet" href="~/Content/skins/skin-green.min.css">*@
    <!-- Google Font -->
    <link rel="stylesheet"
          href="https://fonts.googleapis.com/css?family=Source+Sans+Pro:300,400,600,700,300italic,400italic,600italic">
    
</head>
<body class="hold-transition login-page ">
   
<div class="wrapper">

        <section class="content cp-wrapper">
            <div class="row">
                <div class="col-md-offset-2 col-md-6">
                    <div class="box box-default">
                        <div class="box-header with-border">
                            <h3 class="box-title">Change Password</h3>
                            @*<div class="box-tools pull-right">

                                <button type="button" class="btn btn-box-tool" data-widget="collapse">
                                    <i class="fa fa-minus"></i>
                                </button>
                                <div class="btn-group">
                                    <button type="button" class="btn btn-box-tool dropdown-toggle" data-toggle="dropdown" aria-expanded="false">
                                        <i class="fa fa-wrench"></i>
                                    </button>
                                    <ul class="dropdown-menu" role="menu">
                                        <li><a href="#">Action</a></li>
                                        <li><a href="#">Another action</a></li>
                                        <li><a href="#">Something else here</a></li>
                                        <li class="divider"></li>
                                        <li><a href="#">Separated link</a></li>
                                    </ul>
                                </div>
                                <button type="button" class="btn btn-box-tool" data-widget="remove"><i class="fa fa-times"></i></button>
                            </div>*@
                        </div>


                        @using (Html.BeginForm("ChangePassword", "User", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
                        {<div class="box-body">
                         
                             <div class="row">
                                 <div class="col-sm-12">
                                     @Html.AntiForgeryToken()

                                     @{
                                         var passwordAgedMessage = @ViewBag.PasswordAged;
                                         var passwordHistryAlert = @ViewBag.PasswordHistryAlert;
                                         var oldPasswordNotMatched = ViewBag.oldPasswordNotMatched;
                                     }
                                     @if (passwordAgedMessage != "")
                                     {
                                         if (passwordAgedMessage != null)
                                         {
                                             <div class="alert alert-danger">
                                                 <a href="#" class="close" data-dismiss="alert" aria-label="close">&times;</a>
                                                 <strong>@passwordAgedMessage</strong>
                                             </div>
                                         }
                                     }
                                     @if (passwordHistryAlert != "" && passwordHistryAlert != null)
                                     {
                                         <div class="alert alert-danger">
                                             <a href="#" class="close" data-dismiss="alert" aria-label="close">&times;</a>
                                             <strong>@passwordHistryAlert</strong>
                                         </div>
                                     }
                                     @if (oldPasswordNotMatched != null && oldPasswordNotMatched != "")
                                     {
                                         <div class="alert alert-danger">
                                             <a href="#" class="close" data-dismiss="alert" aria-label="close">&times;</a>
                                             <strong>@oldPasswordNotMatched</strong>
                                         </div>
                                     }
                                     @Html.ValidationSummary()
                                     @Html.HiddenFor(m => m.UserName)
                                     <div class="form-group">
                                         @Html.LabelFor(m => m.OldPassword, new { @class = "col-md-4 control-label" })
                                         <div class="col-md-8">
                                             @Html.PasswordFor(m => m.OldPassword, new { @class = "form-control input-sm" })
                                             @Html.ValidationMessageFor(m => m.OldPassword)
                                         </div>
                                     </div>
                                     <div class="form-group">
                                         @Html.LabelFor(m => m.NewPassword, new { @class = "col-md-4 control-label" })
                                         <div class="col-md-8">
                                             @Html.PasswordFor(m => m.NewPassword, new { @class = "form-control input-sm", @onkeyup = "CheeckPasswordValidate(this)" })
                                             @Html.Label(" ", new { @id = "passwordValMsg", @class = "hidden" })
                                         </div>
                                     </div>
                                     <div class="form-group">
                                         @Html.LabelFor(m => m.ConfirmPassword, new { @class = "col-md-4 control-label" })
                                         <div class="col-md-8">
                                             @Html.PasswordFor(m => m.ConfirmPassword, new { @class = "form-control input-sm" })
                                             @Html.ValidationMessageFor(m => m.ConfirmPassword)
                                         </div>
                                     </div>

                                     <div class="form-group">
                                         <div class=" col-md-12">
                                             <input type="submit" value="Change password" class="btn btn-warning pull-right" id="submitBtn" />
                                             @*<a onclick="history.back();" class="btn  btn-default "><i class="fa fa-arrow-left"></i> Back</a>*@
                                         </div>
                                     </div>
                                 </div>
                             </div>
            
                         </div>

                        }



                    </div>
                </div>
            </div>
        </section>

    
</div>

    @Scripts.Render("~/bundles/theme-jquery")

    <!-- Bootstrap 3.3.7 -->
    @Scripts.Render("~/bundles/bootstrap")

    <!-- AdminLTE App -->
    @Scripts.Render("~/bundles/adminlte")


    @Scripts.Render("~/bundles/jqueryval")
    <script type="text/javascript">
        @*function CheeckPasswordValidate(obj)
        {
            var userName = $("#UserName").val();
            var password = $(obj).val();
       
            if (password != '')
            {
               
                var url = '@Url.Action("CheckValidatePassword", "User")';
                var paramData = { password: password, userName: userName };
                ajaxCall(url, paramData, "RenderValidatePassword");
                console.log(userName);
            }
        }
        function RenderValidatePassword(data)
        {
           
            if (data.maxLCheck && data.minLCharCheck && data.minLCheck && data.minNumberCheck && data.minSCharCheck && data.minUCharCheck) {
                $("#NewPassword").attr('class', 'form-control input-sm');
                $("#submitBtn").attr('disabled', false);
            }
            else {
                $("#NewPassword").attr('class', 'form-control input-sm validate-equalTo-blur input-validation-error');
                $("#submitBtn").attr('disabled', true);
            }
            var msg = "";
            if (!data.maxLCheck) {
                msg = msg + " Length Must be within : " + data.maxL + ". ";
            }
            if (!data.minLCheck) {
                msg = msg + " Minimum Length : " + data.minL + ". ";
            }
            if (!data.minLCharCheck) {
                msg = msg + " At last " + data.minLChar + " Lower Character.";
            }
            if (!data.minUCharCheck) {
                msg = msg + " At last " + data.minUChar + " Upper Character.";
            }
            if (!data.minSCharCheck) {
                msg = msg + " At last " + data.minSChar + " Special Character.";
            }
            if (!data.minNumberCheck) {
                msg = msg + " At last " + data.minNumber + " Number.";
            }
            $("#passwordValMsg").attr('class', "field-validation-error");
            $("#passwordValMsg").text(msg).show();
        }*@
    </script>


</body>
</html>